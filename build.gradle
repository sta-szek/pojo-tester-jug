import java.time.ZoneOffset
import java.time.ZonedDateTime
import java.time.format.DateTimeFormatter

buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
    dependencies {
        classpath("info.solidsoft.gradle.pitest:gradle-pitest-plugin:1.1.10")
        classpath("org.junit.platform:junit-platform-gradle-plugin:1.0.0-SNAPSHOT") { changing = true }
    }
}

ext {
    JUNIT_JUPITER_VERSION = "5.0.0-SNAPSHOT"
    JUNIT_PLATFORM_VERSION = "1.0.0-SNAPSHOT"
    MOCKITO_VERSION = "2.3.5"
    POWER_MOCK_UTILS_VERSION = "1.6.6"
    ASSERTJ_CORE_VERSION = "3.6.1"
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'jacoco'
apply plugin: 'info.solidsoft.pitest'
apply plugin: 'org.junit.platform.gradle.plugin'
apply plugin: 'maven-publish'

repositories {
    mavenCentral()
    jcenter()
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
}

junitPlatform {
    enableStandardTestTask true
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

dependencies {
    testCompile("org.junit.jupiter:junit-jupiter-api:${JUNIT_JUPITER_VERSION}") { changing = true }
    testRuntime("org.junit.jupiter:junit-jupiter-engine:${JUNIT_JUPITER_VERSION}") { changing = true }
    testCompile("org.junit.platform:junit-platform-runner:${JUNIT_PLATFORM_VERSION}") { changing = true }
    testCompile("org.assertj:assertj-core:${ASSERTJ_CORE_VERSION}")
    testCompile("org.mockito:mockito-core:${MOCKITO_VERSION}")
    testCompile("org.powermock.tests:powermock-tests-utils:${POWER_MOCK_UTILS_VERSION}")
    testCompile("pl.pojo:pojo-tester:0.7.1")
}

jacoco {
    toolVersion = "0.7.8"
    reportsDir = file("$buildDir/reports")
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled false
        html.destination "${buildDir}/reports/jacocoHtml"
    }
}

pitest {
    pitestVersion = '1.1.10'
    exportLineCoverage = true
    timestampedReports = false
    targetClasses = ['pl.pojo.tester.*']
    threads = 4
    outputFormats = ['XML', 'HTML']
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.2.1'
}

check.dependsOn jacocoTestReport

